

{
  "compilerOptions": { //основной раздел, где указываются настройки компилятора TypeScript
    "target": "es5", //указывает компилятору преобразовывать TypeScript в код ECMAScript 5, что обеспечивает совместимость со старыми браузерами.
    "lib": [ "dom", "dom.iterable", "esnext" ], //Указывает стандартные библиотеки, которые будут включены в компиляцию. Типы для DOM и последние возможности ECMAScript.
    "allowJs": true, //Разрешает компилятору обрабатывать файлы JavaScript.
    "skipLibCheck": true, //Пропускает проверку типов в объявлениях файлов библиотек, что может ускорить компиляцию.
    "strict": true, //ключает строгий режим проверки типов, что помогает обнаруживать потенциальные ошибки на этапе компиляции.
    "forceConsistentCasingInFileNames": true, //Требует согласованного регистра в именах файлов, что важно для операционных систем с чувствительностью к регистру.
    "noEmit": true, //Предотвращает генерацию выходных файлов после компиляции. Это полезно, когда используется Next.js, который сам обрабатывает TypeScript файлы.
    "esModuleInterop": true, //Обеспечивает совместимость при импорте CommonJS модулей
    "module": "esnext", //Указывает компилятору использовать последние возможности модулей ECMAScript.
    "moduleResolution": "node", //Использует стратегию разрешения модулей Node.js.
    "resolveJsonModule": true, //Позволяет импортировать JSON файлы как модули.
    "isolatedModules": true, //Гарантирует, что каждый файл может быть безопасно транспилирован независимо.
    "jsx": "preserve", //Сохраняет JSX для последующей обработки другим преобразователем, например Babel.
    "incremental": true, //Включает инкрементную компиляцию для ускорения повторных сборок.
    "paths": { //Позволяет настроить псевдонимы путей для упрощения импорта модулей.
      "@/*": [ "./src/*" ]
    }
  },
  "include": [ "next-env.d.ts", "**/*.ts", "**/*.tsx" ],
  "exclude": [ "node_modules" ]
}
